# Base image with .NET SDK
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /app

# Copy solution and project files
COPY TruxScrapper.sln ./
COPY WebDemo/*.csproj ./WebDemo/
COPY TruxScrapper/*.csproj ./TruxScrapper/
RUN dotnet restore

# Copy everything else and build
COPY WebDemo/. ./WebDemo/
COPY TruxScrapper/. ./TruxScrapper/
WORKDIR /app/WebDemo
RUN dotnet publish -c Release -o /app/out

# Runtime image
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app

# Playwright dependencies (headless Chromium needs these!)
RUN apt-get update && apt-get install -y \
    libnss3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libxcomposite1 \
    libxrandr2 \
    libxdamage1 \
    libxkbcommon0 \
    libgbm1 \
    libasound2 \
    libxshmfence1 \
    libxfixes3 \
    libxrender1 \
    libxext6 \
    libx11-6 \
    libglib2.0-0 \
    libpango-1.0-0 \
    libharfbuzz0b \
    libfontconfig1 \
    fonts-liberation \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/out ./

# Install PowerShell# Download and register the Microsoft repository GPG keys
RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
RUN dpkg -i packages-microsoft-prod.deb

# Update the package lists and install PowerShell
RUN apt-get update
RUN apt-get install -y powershell

# Execute Playwright setup script (assuming playwright.ps1 is in /app)
RUN pwsh -Command "& {./playwright.ps1 install; exit $LASTEXITCODE}"


# Configure web app to listen on port 80
ENV ASPNETCORE_URLS=http://+:80
EXPOSE 80

ENTRYPOINT ["dotnet", "WebDemo.dll"]